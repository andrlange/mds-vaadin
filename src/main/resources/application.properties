spring.application.name=mds

spring.main.allow-bean-definition-overriding=true

spring.threads.virtual.enabled=true

spring.datasource.url=jdbc:postgresql://localhost:5432/demo
spring.datasource.username=postgres
spring.datasource.password=password!1234
spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.mode=never

spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.maximum-pool-size=2


#Actuators
management.endpoint.info.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.group.custom.show-components=always
management.endpoint.health.group.custom.show-details=always
management.endpoint.health.show-details=always

vaadin.launch-browser=false
vaadin.exclude-urls=/actuator/**, /demo/**
vaadin.allowed-packages=com.vaadin,org.vaadin,cool.cfapps.mds

# Application specific configuration

# specifies if main db user can log in
mds.security.database.allow-default-login=true
# default role if nothing is set
mds.security.roles.default-role=NONE
# table or view to read the own users role
mds.security.roles.role-table=schema_users
# column which returns the role
mds.security.roles.role-column=role
# column which filters the role for a particular user
mds.security.roles.user-column=username

